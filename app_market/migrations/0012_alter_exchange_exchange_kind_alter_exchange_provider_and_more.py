# Generated by Django 5.2.6 on 2025-09-29 16:22

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app_market', '0011_alter_exchange_exchange_kind_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='exchange',
            name='exchange_kind',
            field=models.CharField(choices=[('CEX', 'Классическая биржа (CEX)'), ('DEX', 'Децентрализованная биржа (DEX)'), ('PSP', 'Платёжная система (PSP)'), ('WALLET', 'Кошелёк'), ('NODE', 'Нода'), ('EXCHANGER', 'Обменники'), ('BANK', 'Банк'), ('MANUAL', 'Ручной обмен (возможно в офисе)')], db_index=True, default='CEX', editable=False, help_text='Устанавливается автоматически', max_length=10, verbose_name='Тип'),
        ),
        migrations.AlterField(
            model_name='exchange',
            name='provider',
            field=models.CharField(choices=[('KUCOIN', 'KuCoin'), ('WHITEBIT', 'WhiteBIT'), ('BYBIT', 'ByBit'), ('RAPIRA', 'Rapira'), ('MEXC', 'MEXC'), ('BINANCE', 'Binance'), ('COINBASE_EXCHANGE', 'Coinbase Exchange'), ('UPBIT', 'Upbit'), ('BITSTAMP', 'Bitstamp'), ('BINGX', 'BingX'), ('BITFINEX', 'Bitfinex'), ('HTX', 'HTX'), ('GATEIO', 'Gate.io'), ('BITGET', 'Bitget'), ('OKX', 'OKX'), ('GEMINI', 'Gemini'), ('LBANK', 'LBank'), ('UNISWAP', 'Uniswap'), ('PANCAKESWAP', 'PancakeSwap'), ('PAYPAL', 'PayPal'), ('ADVCASH', 'Advanced Cash'), ('FIREKASSA', 'FireKassa'), ('APIRONE', 'Apirone'), ('CHANGENOW', 'ChangeNOW'), ('CHANGELLY', 'Changelly'), ('FIXEDFLOAT', 'ff.io'), ('QUICKEX', 'Quickex'), ('ALFABIT', 'Alfabit'), ('WESTWALLET', 'WestWallet'), ('TRUSTWALLET', 'Trust Wallet'), ('TRONWALLET', 'Tron Wallet'), ('ANTARCTICWALLET', 'Antarctic Wallet'), ('TELEGRAM_WALLET', 'Telegram Wallet'), ('BTC_NODE', 'BTC Node'), ('XMR_NODE', 'XMR Node'), ('USDT_NODE', 'USDT Node'), ('USDC_NODE', 'USDC Node'), ('DASH_NODE', 'DASH Node'), ('SBERBANK', 'Сбербанк'), ('TBANK', 'ТБанк'), ('ALFABANK', 'Альфабанк'), ('VTB', 'ВТБ банк'), ('MANUAL', 'Manual')], db_index=True, default='MANUAL', max_length=20, unique=True, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='exchange',
            name='show_prices_on_home',
            field=models.BooleanField(db_index=True, default=False, verbose_name='Цены'),
        ),
        migrations.CreateModel(
            name='ExchangeAvailabilityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Время проверки')),
                ('available', models.BooleanField(verbose_name='Доступен')),
                ('code', models.CharField(max_length=32, verbose_name='Код результата')),
                ('detail', models.CharField(blank=True, default='', max_length=512, verbose_name='Детали')),
                ('latency_ms', models.PositiveIntegerField(default=0, verbose_name='Задержка, мс')),
                ('exchange', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availability_logs', to='app_market.exchange', verbose_name='Поставщик')),
            ],
            options={
                'verbose_name': 'История доступности',
                'verbose_name_plural': 'История доступности',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['exchange', '-created_at'], name='app_market__exchang_1056b2_idx')],
            },
        ),
    ]
