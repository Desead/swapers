"""
Django settings for swapers project.

Generated by 'django-admin startproject' using Django 5.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-isecure-cs9)gg$5u3_jrtv(=w-6w7(!bf5za2qb4pclp^=)@sweg@-b$a'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    # 'django.contrib.admin',
    # ЗАМЕНА стандартного admin на нашу обёртку (см. шаг 3)
    'swapers.admin.OTPAdminConfig',  # вместо 'django.contrib.admin'

    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',

    'app_main.apps.AppMainConfig',  # <= так, чтобы сработал ready()

    "allauth",
    "allauth.account",

    # OTP
    'django_otp',
    'django_otp.plugins.otp_totp',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    "app_main.middleware.ReferralMiddleware",  # <-- добавили
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    "allauth.account.middleware.AccountMiddleware",  # <= добавили ЭТО
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    # важно: после AuthenticationMiddleware
    'django_otp.middleware.OTPMiddleware',
    'app_main.middleware.Admin2FARedirectMiddleware',  # <-- добавь здесь
]

ROOT_URLCONF = 'swapers.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",  # важно для allauth
                "django.contrib.auth.context_processors.auth",
                "django.template.context_processors.static",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = 'swapers.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'ru-ru'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# =========================================================================================
# =========================================================================================
# =========================================================================================

AUTHENTICATION_BACKENDS = [
    "django.contrib.auth.backends.ModelBackend",
    "allauth.account.auth_backends.AuthenticationBackend",
]

AUTH_USER_MODEL = "app_main.User"
SITE_ID = 1  # через django.contrib.sites (если не подключен — добавьте в INSTALLED_APPS)

# --- ALLAUTH: НОВЫЕ НАСТРОЙКИ (без username, логин по email) ---

# способ логина
ACCOUNT_LOGIN_METHODS = {"email"}  # опции: {"username"}, {"email"}, {"username","email"}

# поля формы регистрации (+ обязательность через '*')
ACCOUNT_SIGNUP_FIELDS = ["email*", "password1*", "password2*"]

# наш кастомный User без username
ACCOUNT_USER_MODEL_USERNAME_FIELD = None  # явное отключение username (см. доки)
ACCOUNT_USER_MODEL_EMAIL_FIELD = "email"

# подтверждение email
ACCOUNT_EMAIL_VERIFICATION = "mandatory"  # "none" | "optional" | "mandatory"
ACCOUNT_CONFIRM_EMAIL_ON_GET = True

# rate limits (вместо устаревших ACCOUNT_LOGIN_ATTEMPTS_*)
ACCOUNT_RATE_LIMITS = {
    # число неуспешных логинов: 5 за 5 минут (и по IP, и по ключу пользователя)
    "login_failed": "5/5m/ip,5/5m/key",
}

# редиректы
LOGIN_REDIRECT_URL = "/"
ACCOUNT_LOGOUT_REDIRECT_URL = "/"

# письма: dev — в консоль
EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"
DEFAULT_FROM_EMAIL = "no-reply@newuser.local"

# Как имя вашего сервиса будет отображаться в приложении-аутентификаторе
OTP_TOTP_ISSUER = "2FASwap"  # используется в otpauth URI для QR. :contentReference[oaicite:2]{index=2}
