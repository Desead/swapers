# Generated by Django 5.2.6 on 2025-09-18 14:43

import app_main.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='SiteSetup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('singleton', models.CharField(default='main', editable=False, max_length=16, unique=True)),
                ('domain', models.CharField(default='swap.com', help_text='Например: example.com или localhost (без http/https).', max_length=253, validators=[django.core.validators.RegexValidator(message='Введите корректное доменное имя, например: example.com', regex='^(localhost|(?:(?!-)[A-Za-z0-9-]{1,63}(?<!-)\\.)+[A-Za-z]{2,63})$')], verbose_name='Домен (без http/https)')),
                ('domain_view', models.CharField(default='Swapers', help_text='Название для заголовков/письма и т.п., например: "Swapers".', max_length=100, verbose_name='Отображаемое имя сайта')),
                ('admin_path', models.CharField(default='admin', help_text='Например: supera-dmin', max_length=50, validators=[django.core.validators.RegexValidator(message='Разрешены только маленькие латинские буквы, цифры и дефис', regex='^[a-z0-9-]+$')], verbose_name='Путь к админке')),
                ('otp_issuer', models.CharField(default='Swapers', help_text='Отобразится в приложении-аутентификаторе (например: "Swapers").', max_length=64, validators=[django.core.validators.RegexValidator(message='Допустимы латиница, цифры, пробел, точка, дефис, подчёркивание.', regex='^[A-Za-z0-9 ._-]+$')], verbose_name='Название сервиса для 2FA')),
                ('admin_session_timeout_min', models.PositiveIntegerField(default=10, help_text='Через сколько минут бездействия разлогинивать из админки. 0 — не разлогинивать по простою (сессия живёт до закрытия браузера).', verbose_name='Автовыход из админки, минут')),
                ('robots_txt', models.TextField(blank=True, default='User-agent: *\nDisallow:\n', help_text='Текст, который будет отдан по /robots.txt. Строка Sitemap: https://HOST/sitemap.xml позже будет добавлена автоматически.', verbose_name='Содержимое robots.txt')),
                ('block_indexing', models.BooleanField(default=False, help_text="Если включено, robots.txt будет отдавать 'Disallow: /', а во всех ответах будет заголовок 'X-Robots-Tag: noindex, nofollow'", verbose_name='Запретить индексацию сайта')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('seo_default_title', models.CharField(blank=True, default='Swapers — быстрый и безопасный обмен криптовалют онлайн', help_text='Используется как базовый title, если страница не переопределяет его.', max_length=255, verbose_name='SEO: заголовок по умолчанию (title)')),
                ('seo_default_description', models.TextField(blank=True, default='Онлайн-обменник криптовалют. Мгновенные сделки, прозрачные курсы, фиксированная комиссия. Поддержка Bitcoin, Ethereum и популярных стейблкоинов: USDT, USDC, DAI и другие.', help_text='Используется как базовое описание, если страница не переопределяет его.', verbose_name='SEO: описание по умолчанию (meta description)')),
                ('seo_default_keywords', models.TextField(blank=True, default='обменник, криптовалюта, обмен криптовалют, bitcoin, ethereum, usdt, usdc, dai, обмен онлайн', help_text='Опционально. Может не использоваться поисковиками, но полезно для некоторых интеграций.', verbose_name='SEO: ключевые слова по умолчанию (meta keywords)')),
                ('og_enabled', models.BooleanField(default=True, help_text='Если выключено, OG-теги выводиться не будут.', verbose_name='Включить Open Graph')),
                ('og_type_default', models.CharField(choices=[('website', 'website'), ('article', 'article')], default='website', max_length=20, verbose_name='OG: тип по умолчанию')),
                ('og_title', models.CharField(blank=True, default='Swapers — быстрый и безопасный обмен криптовалют онлайн', help_text='Используется, если страница не задаёт свой OG-заголовок.', max_length=255, verbose_name='OG: заголовок по умолчанию')),
                ('og_description', models.TextField(blank=True, default='Мгновенный обмен BTC, ETH, USDT и других активов. Прозрачные курсы, фиксированная комиссия, 2FA защита.', verbose_name='OG: описание по умолчанию')),
                ('og_image', models.ImageField(blank=True, height_field='og_image_height', help_text='Используется, если страница не задала картинку. Желательно ~1200×630, до 5 MB.', null=True, upload_to='seo/', verbose_name='OG: изображение по умолчанию (1200×630)', width_field='og_image_width')),
                ('og_image_width', models.PositiveIntegerField(default=0, editable=False)),
                ('og_image_height', models.PositiveIntegerField(default=0, editable=False)),
                ('og_image_alt', models.CharField(blank=True, default='Логотип Swapers и обмен криптовалют онлайн', max_length=255, verbose_name='OG: alt у изображения')),
                ('og_locale_default', models.CharField(default='ru_RU', help_text='Например: ru_RU или en_US.', max_length=10, verbose_name='OG: локаль по умолчанию')),
                ('og_locale_alternates', models.CharField(blank=True, default='en_US', help_text='Например: en_US,uk_UA. Будут выведены с og:locale:alternate.', max_length=100, verbose_name='OG: альтернативные локали (через запятую)')),
                ('twitter_cards_enabled', models.BooleanField(default=True, verbose_name='Включить Twitter Cards')),
                ('twitter_card_type', models.CharField(choices=[('summary_large_image', 'summary_large_image'), ('summary', 'summary')], default='summary_large_image', max_length=32, verbose_name='Twitter: тип карточки')),
                ('twitter_site', models.CharField(blank=True, default='', help_text='Имя аккаунта проекта в X/Twitter, без @.', max_length=50, verbose_name='Twitter: @site (без @)')),
                ('twitter_creator', models.CharField(blank=True, default='', help_text='Личный аккаунт автора/редактора, без @ (опционально).', max_length=50, verbose_name='Twitter: @creator (без @)')),
                ('twitter_image', models.ImageField(blank=True, help_text='Если не задано — будет использовано OG-изображение.', null=True, upload_to='seo/', verbose_name='Twitter: изображение по умолчанию')),
                ('use_https_in_meta', models.BooleanField(default=False, help_text='Если выключено — будет использоваться http Объязательно включить на проде!', verbose_name='https в canonical/OG URL')),
                ('hreflang_enabled', models.BooleanField(default=True, help_text='Включает генерацию ссылок alternates для RU/EN.', verbose_name='Включить hreflang ссылки')),
                ('hreflang_xdefault', models.CharField(default='ru', help_text='Например: ru или en — какая версия по умолчанию для поисковика.', max_length=8, verbose_name='hreflang: x-default язык')),
                ('jsonld_enabled', models.BooleanField(default=True, verbose_name='Включить JSON-LD (schema.org)')),
                ('jsonld_organization', models.JSONField(blank=True, default=app_main.models.default_jsonld_org, help_text='JSON объект schema.org/Organization для главной/всего сайта.', null=True, verbose_name='JSON-LD: Organization (дефолт)')),
                ('jsonld_website', models.JSONField(blank=True, default=app_main.models.default_jsonld_website, help_text='JSON объект schema.org/WebSite.', null=True, verbose_name='JSON-LD: WebSite (дефолт)')),
                ('maintenance_mode', models.BooleanField(default=False, help_text='Если включено — пользователи увидят страницу техработ. По умолчанию выключено.', verbose_name='Технические работы')),
                ('open_time_mon', models.TimeField(default='07:00', verbose_name='Понедельник: начало (UTC)')),
                ('close_time_mon', models.TimeField(default='19:00', verbose_name='Понедельник: конец (UTC)')),
                ('open_time_tue', models.TimeField(default='07:00', verbose_name='Вторник: начало (UTC)')),
                ('close_time_tue', models.TimeField(default='19:00', verbose_name='Вторник: конец (UTC)')),
                ('open_time_wed', models.TimeField(default='07:00', verbose_name='Среда: начало (UTC)')),
                ('close_time_wed', models.TimeField(default='19:00', verbose_name='Среда: конец (UTC)')),
                ('open_time_thu', models.TimeField(default='07:00', verbose_name='Четверг: начало (UTC)')),
                ('close_time_thu', models.TimeField(default='19:00', verbose_name='Четверг: конец (UTC)')),
                ('open_time_fri', models.TimeField(default='07:00', verbose_name='Пятница: начало (UTC)')),
                ('close_time_fri', models.TimeField(default='19:00', verbose_name='Пятница: конец (UTC)')),
                ('open_time_sat', models.TimeField(default='09:00', verbose_name='Суббота: начало (UTC)')),
                ('close_time_sat', models.TimeField(default='17:00', verbose_name='Суббота: конец (UTC)')),
                ('open_time_sun', models.TimeField(default='09:00', verbose_name='Воскресенье: начало (UTC)')),
                ('close_time_sun', models.TimeField(default='17:00', verbose_name='Воскресенье: конец (UTC)')),
                ('stablecoins', models.TextField(blank=True, default='USDT, USDC, DAI, TUSD, FDUSD, PYUSD, USDP, GUSD, EURT, EURC, FRAX', help_text='Через запятую, тикеры в верхнем регистре (например: USDT, USDC, DAI).', verbose_name='Список стейблкоинов')),
                ('xml_export_path', models.CharField(default='xml_export', help_text='Будущая точка выдачи XML, например «xml_export» → /xml_export', max_length=64, validators=[django.core.validators.RegexValidator(message="Разрешены строчные латинские буквы, цифры, '-', '_' и '/'. Без ведущего слеша.", regex='^[a-z0-9/_-]+$')], verbose_name='Путь для XML-выгрузки')),
                ('logo', models.ImageField(blank=True, help_text='PNG/SVG; будет использоваться в шапке/мета.', null=True, upload_to='branding/', verbose_name='Логотип')),
                ('favicon', models.ImageField(blank=True, help_text='PNG/ICO 32×32 или 48×48.', null=True, upload_to='branding/', verbose_name='Favicon')),
                ('fee_percent', models.DecimalField(decimal_places=2, default=0.5, help_text='Процент с каждой сделки (0–100).', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Комиссия обменника, %')),
                ('head_inject_html', models.TextField(blank=True, help_text='Счётчики/метрики и т.п. Вставляется как есть на всех страницах.', verbose_name='HTML-код для вставки в head')),
                ('email_from', models.EmailField(blank=True, help_text='Например: no-reply@swap.com', max_length=254, verbose_name='E-mail отправителя (FROM)')),
                ('email_host', models.CharField(blank=True, default='smtp.mail.ru', max_length=255, verbose_name='SMTP host')),
                ('email_port', models.PositiveIntegerField(default=587, verbose_name='SMTP port')),
                ('email_host_user', models.CharField(blank=True, default='', max_length=255, verbose_name='SMTP user')),
                ('email_host_password', models.CharField(blank=True, default='', max_length=255, verbose_name='SMTP password')),
                ('email_use_tls', models.BooleanField(default=True, verbose_name='Использовать TLS')),
                ('email_use_ssl', models.BooleanField(default=False, verbose_name='Использовать SSL')),
                ('telegram_bot_token', models.CharField(blank=True, default='', help_text='Токен бота для уведомлений (хранится как есть).', max_length=255, verbose_name='Telegram Bot Token')),
                ('telegram_chat_id', models.CharField(blank=True, default='', help_text='ID  канала/чата, куда слать служебные уведомления. Чтобы узнать ID запустите бота: @username_to_id_bot', max_length=64, verbose_name='Telegram Chat/Channel ID')),
                ('main_h1', models.CharField(default='Мгновенный обмен криптовалют онлайн', max_length=200, verbose_name='H1 на главной')),
                ('main_subtitle', models.TextField(blank=True, default='Обменивайте Bitcoin, Ethereum и стейблкоины быстро, безопасно и по честному курсу.', verbose_name='Подзаголовок на главной')),
                ('contact_label_clients', models.CharField(blank=True, default='', help_text='Если пусто — используется «Почта для клиентов».', max_length=120, verbose_name='Заголовок: почта для клиентов')),
                ('contact_label_partners', models.CharField(blank=True, default='', help_text='Если пусто — используется «Почта для партнёров».', max_length=120, verbose_name='Заголовок: почта для партнёров')),
                ('contact_label_general', models.CharField(blank=True, default='', help_text='Если пусто — используется «Почта для общих вопросов».', max_length=120, verbose_name='Заголовок: почта для общих вопросов')),
                ('contact_email_clients', models.EmailField(blank=True, default='', max_length=254, verbose_name='Почта для клиентов')),
                ('contact_email_partners', models.EmailField(blank=True, default='', max_length=254, verbose_name='Почта для партнёров')),
                ('contact_email_general', models.EmailField(blank=True, default='', max_length=254, verbose_name='Почта для общих вопросов')),
                ('contact_telegram', models.CharField(blank=True, default='', help_text='Ссылка t.me/... или @username', max_length=255, verbose_name='Telegram для связи')),
                ('social_vk', models.URLField(blank=True, default='', verbose_name='VK')),
                ('social_tg', models.URLField(blank=True, default='', verbose_name='Telegram-канал')),
                ('social_youtube', models.URLField(blank=True, default='', verbose_name='YouTube')),
                ('social_dzen', models.URLField(blank=True, default='', verbose_name='Дзен')),
                ('social_rutube', models.URLField(blank=True, default='', verbose_name='RuTube')),
                ('social_instagram', models.URLField(blank=True, default='', verbose_name='Instagram')),
                ('ref_attribution_window_days', models.PositiveIntegerField(default=90, help_text='Срок жизни подписанной referral-cookie. Last click wins: последний клик по реферальной ссылке действует до регистрации. 0 — не ставить долгоживущую cookie (только сессия до закрытия браузера).', verbose_name='Срок хранения куки (дней)')),
                ('csp_report_only', models.BooleanField(default=False, help_text="Если включено — политика будет в режиме отчётов (не блокирует), заголовок 'Content-Security-Policy-Report-Only'.", verbose_name='CSP: режим Report-Only')),
                ('csp_extra_script_src', models.TextField(blank=True, default='', help_text="Через запятую или пробел: например https://mc.yandex.ru https://code.jivo.ru https://www.googletagmanager.com 'unsafe-eval' (не рекомендуется).", verbose_name='CSP: дополнительные источники script-src')),
                ('csp_extra_style_src', models.TextField(blank=True, default='', help_text='Например: https://fonts.googleapis.com.', verbose_name='CSP: дополнительные источники style-src')),
                ('csp_extra_img_src', models.TextField(blank=True, default='', help_text='Например: https://mc.yandex.ru data: blob:.', verbose_name='CSP: дополнительные источники img-src')),
                ('csp_extra_connect_src', models.TextField(blank=True, default='', help_text='Например: https://mc.yandex.ru https://api.example.com.', verbose_name='CSP: дополнительные источники connect-src')),
                ('csp_extra_frame_src', models.TextField(blank=True, default='', help_text='Например: https://www.youtube.com https://player.vimeo.com.', verbose_name='CSP: дополнительные источники frame-src')),
                ('csp_extra_font_src', models.TextField(blank=True, default='', help_text='Например: https://fonts.gstatic.com data:.', verbose_name='CSP: дополнительные источники font-src')),
            ],
            options={
                'verbose_name': 'Настройки сайта',
                'verbose_name_plural': 'Настройки сайта',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True, verbose_name='Email')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='Фамилия')),
                ('phone', models.CharField(blank=True, max_length=32, verbose_name='Телефон')),
                ('company', models.CharField(blank=True, max_length=255, verbose_name='Компания')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('referral_code', models.CharField(blank=True, max_length=16, unique=True, verbose_name='Партнёрский код')),
                ('count', models.PositiveIntegerField(default=0, verbose_name='Партнёров привлечено')),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Партнёрский баланс, $')),
                ('referral_first_seen_at', models.DateTimeField(blank=True, help_text='Дата и время первого визита с реферальным кодом.', null=True, verbose_name='Первый визит по партнёрской ссылке')),
                ('referral_signup_delay', models.DurationField(blank=True, help_text='Разница между первым визитом по реф-ссылке и моментом регистрации.', null=True, verbose_name='Задержка до регистрации')),
                ('language', models.CharField(choices=[('ru', 'Russian'), ('en', 'English')], default='ru', max_length=8, verbose_name='Язык общения')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('referred_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='referrals', to=settings.AUTH_USER_MODEL, verbose_name='Кто привёл')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'permissions': [('export_users', 'Can export users'), ('view_finance', 'Can view finance dashboards')],
            },
            managers=[
                ('objects', app_main.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BlocklistEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('reason', models.CharField(blank=True, default='', max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Запись чёрного списка',
                'verbose_name_plural': 'Чёрный список',
            },
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['referred_by', 'date_joined'], name='user_ref_by_date_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['date_joined'], name='user_joined_idx'),
        ),
        migrations.AddIndex(
            model_name='blocklistentry',
            index=models.Index(fields=['email'], name='app_main_bl_email_48261d_idx'),
        ),
        migrations.AddIndex(
            model_name='blocklistentry',
            index=models.Index(fields=['ip_address'], name='app_main_bl_ip_addr_760594_idx'),
        ),
        migrations.AddIndex(
            model_name='blocklistentry',
            index=models.Index(fields=['is_active'], name='app_main_bl_is_acti_582ec6_idx'),
        ),
    ]
