# Generated by Django 5.2.6 on 2025-09-11 14:38

import app_main.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='SiteSetup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('singleton', models.CharField(default='main', editable=False, max_length=16, unique=True)),
                ('admin_path', models.CharField(default='admin', help_text='Например: supera-dmin', max_length=50, validators=[django.core.validators.RegexValidator(message='Разрешены только маленькие латинские буквы,цифры и дефис', regex='^[a-z0-9-]+$')], verbose_name='Путь к админке')),
                ('otp_issuer', models.CharField(default='Swapers', help_text='Отобразится в приложении-аутентификаторе (например: "Swapers").', max_length=64, validators=[django.core.validators.RegexValidator(message='Допустимы латиница, цифры, пробел, точка, дефис, подчёркивание.', regex='^[A-Za-z0-9 ._-]+$')], verbose_name='Название сервиса для 2FA')),
            ],
            options={
                'verbose_name': 'Настройки сайта',
                'verbose_name_plural': 'Настройки сайта',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True, verbose_name='Email')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='Фамилия')),
                ('phone', models.CharField(blank=True, max_length=32, verbose_name='Телефон')),
                ('company', models.CharField(blank=True, max_length=255, verbose_name='Компания')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('referral_code', models.CharField(blank=True, max_length=16, unique=True, verbose_name='Партнёрский код')),
                ('count', models.PositiveIntegerField(default=0, verbose_name='Партнёров привлечено')),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Партнёрский баланс, $')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('referred_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='referrals', to=settings.AUTH_USER_MODEL, verbose_name='Кто привёл')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'permissions': [('export_users', 'Can export users'), ('view_finance', 'Can view finance dashboards')],
                'indexes': [models.Index(fields=['referred_by', 'date_joined'], name='user_ref_by_date_idx'), models.Index(fields=['date_joined'], name='user_joined_idx')],
            },
            managers=[
                ('objects', app_main.models.UserManager()),
            ],
        ),
    ]
